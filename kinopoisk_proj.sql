-- MySQL Script generated by MySQL Workbench
-- Sat Aug 14 18:51:02 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `First_name` VARCHAR(45) NOT NULL,
  `Last_name` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(100) NOT NULL,
  `Password` VARCHAR(45) NOT NULL DEFAULT 'SHA()',
  `Created_date` DATETIME NOT NULL DEFAULT NOW(),
  `Updated_date` DATETIME NULL DEFAULT NULL ON UPDATE NOW(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Profile` (
  `User_id` INT UNSIGNED NOT NULL,
  `Username` VARCHAR(45) NOT NULL,
  `Rating` INT NULL,
  INDEX `fk_Profile_User_idx` (`User_id` ASC) VISIBLE,
  PRIMARY KEY (`User_id`),
  UNIQUE INDEX `User_id_UNIQUE` (`User_id` ASC) VISIBLE,
  CONSTRAINT `fk_Profile_User`
    FOREIGN KEY (`User_id`)
    REFERENCES `mydb`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Film Catalog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Film Catalog` (
  `Film_id` INT NOT NULL AUTO_INCREMENT,
  `Name` MEDIUMTEXT NOT NULL,
  `Film Catalogcol` VARCHAR(45) NULL,
  `Price` DECIMAL NULL,
  `Actors` JSON NULL,
  `Time` TIME NULL,
  `Year_of_issue` INT NULL,
  PRIMARY KEY (`Film_id`),
  UNIQUE INDEX `Film_id_UNIQUE` (`Film_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Payment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Film Catalog_Film_id` INT NOT NULL,
  `Profile_User_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `Film Catalog_Film_id`, `Profile_User_id`),
  INDEX `fk_Payment_Film Catalog1_idx` (`Film Catalog_Film_id` ASC) VISIBLE,
  INDEX `fk_Payment_Profile1_idx` (`Profile_User_id` ASC) VISIBLE,
  CONSTRAINT `fk_Payment_Film Catalog1`
    FOREIGN KEY (`Film Catalog_Film_id`)
    REFERENCES `mydb`.`Film Catalog` (`Film_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Payment_Profile1`
    FOREIGN KEY (`Profile_User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`favorites`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`favorites` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Profile_User_id` INT UNSIGNED NOT NULL,
  `Film Catalog_Film_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_favorites_Profile1_idx` (`Profile_User_id` ASC) VISIBLE,
  INDEX `fk_favorites_Film Catalog1_idx` (`Film Catalog_Film_id` ASC) VISIBLE,
  CONSTRAINT `fk_favorites_Profile1`
    FOREIGN KEY (`Profile_User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorites_Film Catalog1`
    FOREIGN KEY (`Film Catalog_Film_id`)
    REFERENCES `mydb`.`Film Catalog` (`Film_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Review` (
  `Review_id` INT NOT NULL AUTO_INCREMENT,
  `Profile_id` INT UNSIGNED NOT NULL,
  `Film_id` INT NOT NULL,
  `Subject` MEDIUMTEXT NOT NULL,
  `Text` LONGTEXT NULL,
  PRIMARY KEY (`Review_id`, `Profile_id`),
  INDEX `fk_Review_Profile1_idx` (`Profile_id` ASC) VISIBLE,
  INDEX `fk_Review_Film Catalog1_idx` (`Film_id` ASC) VISIBLE,
  CONSTRAINT `fk_Review_Profile1`
    FOREIGN KEY (`Profile_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Review_Film Catalog1`
    FOREIGN KEY (`Film_id`)
    REFERENCES `mydb`.`Film Catalog` (`Film_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Post` (
  `Post_id` INT NOT NULL AUTO_INCREMENT,
  `Profile_User_id` INT UNSIGNED NOT NULL,
  `Subject` VARCHAR(45) NOT NULL,
  `Descruption` TEXT(1000) NULL,
  `Text` LONGTEXT NOT NULL,
  PRIMARY KEY (`Post_id`),
  UNIQUE INDEX `Post_id_UNIQUE` (`Post_id` ASC) VISIBLE,
  INDEX `fk_Post_Profile1_idx` (`Profile_User_id` ASC) VISIBLE,
  CONSTRAINT `fk_Post_Profile1`
    FOREIGN KEY (`Profile_User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Serial Catalog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Serial Catalog` (
  `Serial_id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) NOT NULL,
  `Description` MEDIUMTEXT NULL,
  `Seasons` INT NOT NULL,
  `Episods` INT NOT NULL,
  `Actors` JSON NULL,
  `Price` DECIMAL NULL,
  PRIMARY KEY (`Serial_id`),
  UNIQUE INDEX `Serial_id_UNIQUE` (`Serial_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Profile film and Serial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Profile film and Serial` (
  `Film_id` INT NOT NULL,
  `Profile_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Film_id`, `Profile_id`),
  INDEX `fk_Film Catalog_has_Profile_Profile1_idx` (`Profile_id` ASC) VISIBLE,
  INDEX `fk_Film Catalog_has_Profile_Film Catalog1_idx` (`Film_id` ASC) VISIBLE,
  CONSTRAINT `fk_Film Catalog_has_Profile_Film Catalog1`
    FOREIGN KEY (`Film_id`)
    REFERENCES `mydb`.`Film Catalog` (`Film_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Film Catalog_has_Profile_Profile1`
    FOREIGN KEY (`Profile_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Serial Catalog_has_Profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Serial Catalog_has_Profile` (
  `Serial Catalog_Serial_id` INT NOT NULL,
  `Profile_User_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Serial Catalog_Serial_id`, `Profile_User_id`),
  INDEX `fk_Serial Catalog_has_Profile_Profile1_idx` (`Profile_User_id` ASC) VISIBLE,
  INDEX `fk_Serial Catalog_has_Profile_Serial Catalog1_idx` (`Serial Catalog_Serial_id` ASC) VISIBLE,
  CONSTRAINT `fk_Serial Catalog_has_Profile_Serial Catalog1`
    FOREIGN KEY (`Serial Catalog_Serial_id`)
    REFERENCES `mydb`.`Serial Catalog` (`Serial_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Serial Catalog_has_Profile_Profile1`
    FOREIGN KEY (`Profile_User_id`)
    REFERENCES `mydb`.`Profile` (`User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
